plugins {
    id 'org.springframework.boot' version '2.2.10.RELEASE'
    id 'net.ltgt.apt' version '0.15'
    id 'com.commercehub.gradle.plugin.avro' version '0.19.0'
    id 'jacoco'
    id "com.gorylenko.gradle-git-properties" version "2.2.3"

}

apply from: 'swagger.gradle'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt-idea'
apply from: "http://nexus.internal.10x.mylti3gh7p4x.net/repository/maven-releases/com/tenx/security/security-plugins/0.1.21/security-plugins-0.1.21.gradle"

group = 'com.tenx.fraudamlmanager'
version = '3.0.0-SNAPSHOT'

sourceCompatibility = '11'
targetCompatibility = '11'

defaultTasks 'clean', 'build', 'bootRun'

springBoot {
    mainClassName = 'com.tenx.fraudamlmanager.FraudAmlManagerApplication'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.dom4j:dom4j:2.1.3'
    implementation 'io.opentracing.contrib:opentracing-kafka-client:0.1.12'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    implementation "org.openapitools:jackson-databind-nullable:0.2.1"
    implementation 'com.vladmihalcea:hibernate-types-52:2.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:2.2.2.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.35'


    // Kafka dependencies
    implementation "org.springframework.kafka:spring-kafka:2.3.1.RELEASE"
    implementation "org.apache.kafka:kafka-clients:$apacheKafkaVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "io.confluent:kafka-avro-serializer:5.4.0"
    implementation ("com.tenx.kafka:10x-kafka-security:1.0.21") {
        exclude module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation "io.springfox:springfox-bean-validators:2.9.2"

    implementation "org.json:json:20190722"

    implementation "org.bouncycastle:bcprov-jdk15on:1.61"

    implementation 'org.mapstruct:mapstruct:1.3.0.Final'
    implementation 'org.projectlombok:lombok'

    implementation "com.tenx.logging:standard-logging-spring-starter:latest.integration"

    runtime 'org.postgresql:postgresql:42.2.17-tenx'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'

    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Kafka test dependencies
    testImplementation ("org.springframework.kafka:spring-kafka-test:2.3.1.RELEASE") {
        exclude module: 'kafka_2.12'
    }
    testImplementation "org.apache.kafka:kafka-clients:$apacheKafkaVersion:test"
    testImplementation "org.apache.kafka:kafka_2.12:$apacheKafkaVersion"
    testImplementation "org.apache.kafka:kafka_2.12:$apacheKafkaVersion:test"
    testImplementation "com.tenx.kafka:10x-kafka-security:1.0.21"
    testImplementation "com.tenx.kafka:10x-kafka-security:1.0.21:tests"

    testImplementation group: 'io.netty', name: 'netty-handler', version: '4.1.46.Final'
    testImplementation group: 'io.netty', name: 'netty-codec', version: '4.1.46.Final'
    testImplementation group: 'io.netty', name: 'netty-transport', version: '4.1.46.Final'
    testImplementation group: 'io.netty', name: 'netty-resolver', version: '4.1.46.Final'
    testImplementation group: 'io.netty', name: 'netty-buffer', version: '4.1.46.Final'
    testImplementation group: 'io.netty', name: 'netty-common', version: '4.1.46.Final'

    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.0'

    testCompile ("com.github.tomakehurst:wiremock-jre8:2.24.1") {
    constraints
        testCompile('org.eclipse.jetty:jetty-webapp:9.4.33.v20201020')

    }

    testCompile group: 'org.hsqldb', name: 'hsqldb', version: '2.5.0'
    testImplementation 'org.awaitility:awaitility:4.0.2'
    testImplementation("com.nhaarman:mockito-kotlin:1.6.0")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()

}

jar {
    enabled = true
    baseName = 'fraud-aml-manager-svc'
    version = ''
}

dependencyCheckAnalyze.enabled = false
