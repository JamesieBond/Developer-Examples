ext {

    versions = [
            springBoot         : '2.2.6.RELEASE',
            springKafka        : '2.3.4.RELEASE',
            spring             : '5.2.3.RELEASE',
            apacheKafka        : '2.3.1',
            kafkaAvroSerializer: '5.2.1',
            avro               : '1.9.0',
            jettyServer        : '9.4.26.v20200117',
            lombok             : '1.18.10',
            transactionMessage : '0.2.85',
            postgresql         : '42.2.6',
            hibernateTypes     : '2.5.0',
            dbScheduler        : '6.2',
            flyway             : "1.0.0.10X",
            immutables         : "2.8.1",
            jackson            : "2.10.1",
            jakarta            : "2.3.2",
            javaxValidation    : "2.0.1.Final",
            guava              : "29.0-jre",

            //test libs
            junit5             : '5.2.0',
            mockito            : '2.24.0',
            assertJ            : '3.9.0',
            awaitility         : '3.1.6',
            embeddedCockroach  : '0.1.0',
    ]

    libs = [
            springBootStarter       : "org.springframework.boot:spring-boot-starter:$versions.springBoot",
            springBootWeb           : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
            springBootJpa           : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",
            springBootActuator      : "org.springframework.boot:spring-boot-starter-actuator:$versions.springBoot",
            springKafka             : "org.springframework.kafka:spring-kafka:$versions.springKafka",
            springKafkaTest         : "org.springframework.kafka:spring-kafka-test:$versions.springKafka",
            jettyServer             : "org.eclipse.jetty:jetty-server:$versions.jettyServer",
            kafkaClients            : "org.apache.kafka:kafka-clients:$versions.apacheKafka",
            apacheKafka             : "org.apache.kafka:kafka_2.12:$versions.apacheKafka",
            kafkaAvroSerializer     : "io.confluent:kafka-avro-serializer:$versions.kafkaAvroSerializer",
            avro                    : "org.apache.avro:avro:$versions.avro",
            lombok                  : "org.projectlombok:lombok:$versions.lombok",
            transactionMessage      : "com.tenx.digital-universal-banking:transaction-message:$versions.transactionMessage",
            postgresql              : "org.postgresql:postgresql:$versions.postgresql",
            hibernateTypes          : "com.vladmihalcea:hibernate-types-52:$versions.hibernateTypes",
            dbScheduler             : "com.github.kagkarlsson:db-scheduler-spring-boot-starter:$versions.dbScheduler",
            jacksonDatabind         : "com.fasterxml.jackson.core:jackson-databind:$versions.jackson",
            jacksonCore             : "com.fasterxml.jackson.core:jackson-core:$versions.jackson",
            jacksonCoreCsv          : "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:$versions.jackson",
            jacksonAnnotation       : "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson",
            jacksonModule           : "com.fasterxml.jackson.module:jackson-module-paranamer:$versions.jackson",
            jacksonModuleNames      : "com.fasterxml.jackson.module:jackson-module-parameter-names:$versions.jackson",
            jacksonJsonOrg          : "com.fasterxml.jackson.datatype:jackson-datatype-json-org:$versions.jackson",
            jacksonJsr310           : "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$versions.jackson",
            jacksonJdk              : "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$versions.jackson",
            jacksonScala            : "com.fasterxml.jackson.module:jackson-module-scala_2.12:$versions.jackson",
            flyway                  : "org.flywaydb:flyway-core:$versions.flyway",
            jakarta                 : "jakarta.xml.bind:jakarta.xml.bind-api:$versions.jakarta",
            javaxValidation         : "javax.validation:validation-api:$versions.javaxValidation",
            immutables              : "org.immutables:immutables:$versions.immutables",
            immutablesValue         : "org.immutables:value:$versions.immutables",
            immutablesBuilder       : "org.immutables:builder:$versions.immutables",
            guava                   : "com.google.guava:guava:$versions.guava",

            //test libs
            junitJupiterApi         : "org.junit.jupiter:junit-jupiter-api:$versions.junit5",
            junitJupiterEngine      : "org.junit.jupiter:junit-jupiter-engine:$versions.junit5",
            junitJupiterParams      : "org.junit.jupiter:junit-jupiter-params:$versions.junit5",
            mockito                 : "org.mockito:mockito-core:$versions.mockito",
            mockitoJunitJupiter     : "org.mockito:mockito-junit-jupiter:$versions.mockito",
            assertJ                 : "org.assertj:assertj-core:$versions.assertJ",
            awaitility              : "org.awaitility:awaitility:$versions.awaitility",
            embeddedCockroach       : "com.tenxbanking:cockroach-runner:$versions.embeddedCockroach",
            apacheKafkaTest         : "org.apache.kafka:kafka_2.12:$versions.apacheKafka:test",
            kafkaClientsTest        : "org.apache.kafka:kafka-clients:$versions.apacheKafka:test",
            kafkaStreamsTest        : "org.apache.kafka:kafka-streams:$versions.apacheKafka:test",
            kafkaSchemaRegistry     : "io.confluent:kafka-schema-registry:$versions.kafkaAvroSerializer",
            kafkaSchemaRegistryTests: "io.confluent:kafka-schema-registry:$versions.kafkaAvroSerializer:tests",
            springBootStarterTest   : "org.springframework.boot:spring-boot-starter-test:$versions.springBoot",

    ]
}
